<?xml version="1.0" encoding="UTF-8"?>
<!--<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">-->
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <!--
      the maximum number of threads this servlet will initialize
      setting to jacorb.poa.thread_pool_max seems exhausts the jacorb RequestController-1 thread pool
      so if, say, jacorb.poa.thread_pool_max=32 the set it to 75% of this value, ie 24
      EAP5 does not suffer from this problem
    -->
    <context-param>
      <param-name>max_threads</param-name>
      <param-value>24</param-value> <!-- should be less than or equal to jacorb.poa.thread_pool_max -->
    </context-param>
    <!-- the number of requests each thread will service-->
    <context-param>
      <param-name>batch_size</param-name>
      <param-value>100</param-value>
    </context-param>

    <servlet>
        <servlet-name>PerfTest</servlet-name>
        <servlet-class>narayana.performance.web.PerfTest</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>PerfTest</servlet-name>
        <url-pattern>/test</url-pattern>
    </servlet-mapping>
</web-app>
